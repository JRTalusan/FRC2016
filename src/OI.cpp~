// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ActuateDartCommand.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveTrainCommand.h"
#include "Commands/LauncherDefaultCommand.h"
#include "Commands/LauncherMotorTestCommand.h"
#include "Commands/loadermotortestcommand.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    driverjoystick.reset(new Joystick(0));
    
    loaderForward.reset(new JoystickButton(driverjoystick.get(), 1));
    loaderForward->WhileHeld(new loadermotortestcommand(true));
    launcherWheelBackward.reset(new JoystickButton(driverjoystick.get(), 3));
    launcherWheelBackward->WhileHeld(new LauncherMotorTestCommand(false));
    launcherWheelForward.reset(new JoystickButton(driverjoystick.get(), 4));
    launcherWheelForward->WhileHeld(new LauncherMotorTestCommand(true));
    dartBackward.reset(new JoystickButton(driverjoystick.get(), 6));
    dartBackward->WhileHeld(new ActuateDartCommand(false));
    dartForward.reset(new JoystickButton(driverjoystick.get(), 8));
    dartForward->WhileHeld(new ActuateDartCommand(true));

    // SmartDashboard Buttons
    SmartDashboard::PutData("ActuateDartCommand: default", new ActuateDartCommand(false));
    SmartDashboard::PutData("loadermotortestcommand: default", new loadermotortestcommand(false));
    SmartDashboard::PutData("LauncherMotorTestCommand: default", new LauncherMotorTestCommand(true));
    SmartDashboard::PutData("LauncherDefaultCommand", new LauncherDefaultCommand());
    SmartDashboard::PutData("DriveTrainCommand", new DriveTrainCommand());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getdriverjoystick() {
   return driverjoystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
